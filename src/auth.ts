import { getUsers } from "./api"; import { setUserFirstName, getTheme } from "./storage";
document.documentElement.classList.toggle('light', getTheme()==='light');
const form = document.getElementById("loginForm") as HTMLFormElement; const state = document.getElementById("loginState") as HTMLDivElement; const msg = document.getElementById("loginMsg") as HTMLParagraphElement; const btn = document.getElementById("btnLogin") as HTMLButtonElement;
function showError(text:string){ msg.textContent=text; msg.className="msg error"; }
form.addEventListener("submit", async (e)=>{ e.preventDefault(); msg.textContent=""; const username=(form.username as HTMLInputElement).value.trim(); const password=(form.password as HTMLInputElement).value; if(!username||!password){ showError("Kredensial tidak valid."); return; } btn.disabled=true; state.classList.remove("hidden"); try{ const users=await getUsers(); const u=users.find(x=>String(x.username).toLowerCase()===username.toLowerCase()); await new Promise(r=>setTimeout(r,300)); if(!u || String(u.password)!==String(password)){ showError("Kredensial tidak valid."); return; } setUserFirstName(u.firstName || "User"); msg.textContent="Login berhasil. Mengarahkan ke halaman recipesâ€¦"; msg.className="msg"; setTimeout(()=>{ window.location.href="./recipes.html"; },650); }catch{ showError("Terjadi masalah saat login."); } finally{ btn.disabled=false; state.classList.add("hidden"); } });
